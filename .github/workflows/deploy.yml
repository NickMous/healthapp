name: Deploy Laravel App to production

env:
  PUBLIC_PATH: "/var/www/html/com/healthapp"
  BUILD_PATH: "/var/www/html/com/"
  BUILD_REPO: "healthapp"

on:
  push:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.3'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install NPM Dependencies
        run: npm install
      - name: Run build
        run: npm run build
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/pest

  deploy:
    needs: laravel-tests

    runs-on: ubuntu-latest

    steps:

      - name: Activate maintenance mode üõ†Ô∏è
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.SSHPORT }}
          script: |
            cd ${{ env.PUBLIC_PATH }}
            (php artisan down --secret="bypass-nick" --refresh="15") || true

      - name: Deploy code to production üöÄ
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.SSHPORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ${{ env.PUBLIC_PATH }}
            git pull
            composer install --optimize-autoloader --no-dev --no-interaction --prefer-dist
            php artisan clear-compiled
            npm install
            npm ci
            php artisan migrate
            php artisan key:generate
            npm run build
            php artisan optimize

      - name: Deactivate maintenance mode üõ†Ô∏è
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.SSHPORT }}
          script: |
            cd ${{ env.PUBLIC_PATH }}
            php artisan up
